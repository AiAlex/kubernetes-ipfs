name: block 2/3 of network, attempt Y pins on remaining and expect error
config:
  nodes: {{N}}
  selector: app=ipfs-cluster
  times: 1
  expected:
    successes: {{Block_successes}} # Y*3 + 2*Y*N
    failures: 0
    timeouts: 0
  subset_partition:
    partition_type: WEIGHTED
    order: SEQUENTIAL
    percents: [66, 34]
steps:
  - name: add Y things to ipfs
    for:
      iter_structure: BOUND
      number: {{Y}} # replace with Y using parameter feature
    cmd: "head -c 100 /dev/urandom | base64 | ipfs add -q && sleep 1"
    selection:
      subset: [2]
      range:
        order: RANDOM
        number: 1
    outputs:
    - line: 0
      append_to: HASH
  - name: block 2/3 of network
    cmd: "killall -STOP ipfs-cluster-service && sleep 60"
    selection:
      subset: [1]
      percent:
        order: RANDOM
        percent: 100
  - name: attempt to pin in live minority
    for:
      iter_structure: HASH
    cmd: "ipfs-cluster-ctl pin add ${HASH[%i]} && sleep 1"
    selection:
      subset: [2]
      range:
        order: RANDOM
        number: 1
    assertions:
      - line: 0
        should_be_equal_to: "An error ocurred:"
      - line: 1
        should_be_equal_to: "  Code: 500"
      - line: 2
        should_be_equal_to: "  Message: context deadline exceeded"
  - name: restart the stopped cluster daemons
    cmd: "killall -CONT ipfs-cluster-service && sleep 1"
    selection:
      subset: [1]
      percent:
        order: RANDOM
        percent: 100
  - name: check that nothing is pinned anywhere
    for:
      iter_structure: HASH
    selection:
      percent:
        order: SEQUENTIAL
        percent: 100
        start: 1
    cmd: "ipfs-cluster-ctl --enc json status ${HASH[%i]}
        | jq -r '.peer_map | .[].status' | sort | uniq
        | tee /tmp/singleout.txt && cat /tmp/singleout.txt | wc -l"
    assertions:
      - line: 0
        should_be_equal_to: "unpinned"
      - line: 1
        should_be_equal_to: "1"
