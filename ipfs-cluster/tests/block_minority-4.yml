name: Y (for now 20) pins, block 1/3 of network, then Y unpins then unblock
config:
  nodes: 9
  selector: app=ipfs-cluster
  times: 1
  expected:
    successes: 1
    failures: 0
    timeouts: 0
  subset_partition:
    partition_type: WEIGHTED
    order: SEQUENTIAL
    percents: [66, 34]
steps:
  - name: add Y things to ipfs
    for:
      iter_structure: BOUND
      number: 20 # replace with Y using parameter feature
    cmd: "head -c 100 /dev/urandom | base64 | ipfs add -q && sleep 1"
    on_node: 1
    outputs:
    - line: 0
      append_to: HASH
  - name: pin hashes to cluster
    for:
      iter_structure: HASH
    cmd: "ipfs_cluster-ctl pin add ${HASH[%i]} && sleep 1"
    on_node: 1
#TODO check that each hash is successfully pinned
 - name: block minority of cluster
   cmd: "killall -STOP ipfs-cluster-service"
   selection:
     subset: [2]
     percent:
       order: RANDOM
       percent: 100
 - name: Make Y unpins in connected majority
   for:
     iter_structure: HASH
   cmd: "ipfs-cluster-ctl pin rm ${HASH[%i]} && sleep 1"
   selection:
     subset: [1]
     range:
       order: RANDOM
       number: 1

 - name: Check that nothing is pinned in majority group
 #TODO check nothing is pinned
 - name: unblock minority
   cmd: "killall -CONT ipfs-cluster-service"
   selection:
     subset: [2]
     percent:
       order: RANDOM
       percent: 100
 - name: wait 10 seconds for everyone to come back
   cmd: "sleep 10"
   on_node: 1
 - name: check that nothing is pinned anymore
 #TODO check nothing is pinned
