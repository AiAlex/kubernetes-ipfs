name: Y (for now 4) pins, first half of tests 10 & 11
config:
  nodes: 4
  selector: app=ipfs-cluster
  times: 1
  expected:
    successes: 5
    failures: 0
    timeouts: 0
  subset_partition:
    partition_type: WEIGHTED
    order: SEQUENTIAL
    percents: [50, 50]
steps:
  - name: gather peer addresses in an array
    for:
      iter_structure: BOUND
      number: 4  # The number of nodes
    cmd: get the addr!
    outputs:
    - line: 0
      append_to: ADDR
  - name: add initial peers to bootstrappers cluster
    for:
      iter_structure: BOUND
      number: 1    # number of nodes / 2 - 1
    on_node: 4 # The last node is always the bootstrapper
    cmd: ipfs-cluster-ctl peers add ${ADDR[2]}   # Will need to tweak kubernetes ipfs to get the relative indexing we need either better regex or add a from to iter_structure
  - name: add Y things to ipfs
    for:
      iter_structure: BOUND
      number: 5 # replace with Y using parameter feature
    cmd: "head -c 100 /dev/urandom | base64 | ipfs add -q && sleep 1"
    selection:
      range:
        order: RANDOM
        number: 1
    outputs:
    - line: 0
      append_to: HASH
  - name: pin hashes to cluster
    for:
      iter_structure: HASH
    cmd: "ipfs-cluster-ctl pin add ${HASH[%i]} && sleep 1"
    selection:
      range:
        order: RANDOM
        number: 1
  - name: check all hashes are pinned
    on_node: 1
    for:
      iter_structure: HASH
    cmd: "ipfs-cluster-ctl --enc json status ${HASH[%i]}
        | jq -r '.peer_map | .[].status' | sort
        | tee /tmp/allout.txt | uniq | tee /tmp/singleout.txt
        && cat /tmp/allout.txt | wc -l && cat /tmp/singleout.txt | wc -l"
    assertions:
      - line: 0
        should_be_equal_to: "pinned"
      - line: 1
        should_be_equal_to: "5" #Number of nodes (Rep factor of 5 (all nodes) by default)
      - line: 2
        should_be_equal_to: "1" #No unpins!
