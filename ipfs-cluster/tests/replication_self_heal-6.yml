name: pin with replication factor and block some nodes
config:
  nodes: {{N}}
  selector: app=ipfs-cluster
  times: 1
  expected:
    successes: {{Y}}
    failures: 0
    timeouts: 0
  subset_partition:
    partition_type: WEIGHTED
    order: RANDOM
    percents: [60, 40]
steps:
  - name: add Y things to ipfs
    for:
      iter_structure: BOUND
      number: {{Y}}
    cmd: "head -c 100 /dev/urandom | base64 | ipfs add -q && sleep 1"
    on_node: 1
    outputs:
    - line: 0
      append_to: HASH
  - name: pin Y things to cluster with rep factor = 3
    for:
      iter_structure: HASH
    cmd: "ipfs-cluster-ctl pin add -r 3 ${HASH[%i]} && sleep 1"
    selection:
      subset: [2]
      range:
        order: RANDOM
        number: 1
  - name: block other random nodes
    cmd: "killall -STOP ipfs-cluster-service"
    selection:
      subset: [2]
      percent:
        order: RANDOM
        percent: 100
  - name: wait for rebalancing to complete
    on_node: 1
    cmd: "sleep 50"
  - name: check that each hash is still present on 3 nodes
    for:
      iter_structure: HASH
    selection:
      subset: [1]
      range:
        order: RANDOM
        number: 1
    cmd: "ipfs-cluster-ctl --enc json status ${HASH[%i]} | jq -r '.peer_map
        | .[].status' > /tmp/pin-status.txt && grep 'pinned' /tmp/pin-status.txt | wc -l"
    assertions:
    - line: 0
      should_be_equal_to: "3"
  - name: restore cluster service daemon
    cmd: "killall -CONT ipfs-cluster-service"
    selection:
      subset: [2]
      percent:
        order: RANDOM
        percent: 100
