kubectl get pods -l run=ipfs-cluster -o jsonpath='{.items..metadata.name}'

kubectl get pods -o jsonpath='{.items..status.podIP}'

kubectl get pod -l app=ipfs-cluster-bootstrapper -o  jsonpath='{.items..status.podIP}'


# Get boostrapper id
kubectl exec (kubectl get pod -l app=ipfs-cluster-bootstrapper -o  jsonpath='{.items..metadata.name}') -- ipfs-cluster-ctl --enc json id | jq -r .id
# Get bootstrapper ip
kubectl get pod -l app=ipfs-cluster-bootstrapper -o  jsonpath='{.items..status.podIP}'

# get ip from single pod
kubectl get pods ipfs-cluster-3655037020-g83c8  -o jsonpath='{.status.podIP}'

# multiaddresses from all pods
for n in (kubectl get pods -l app=ipfs-cluster -o jsonpath='{.items[*].metadata.name}'| xargs -n1); echo "/ip4/"(kubectl get pods $n -o jsonpath='{.status.podIP}')"/tcp/9096/ipfs/"(kubectl exec $n -- ipfs-cluster-ctl --enc json id | jq -r .id); end

set bootstrap (kubectl get pod -l app=ipfs-cluster-bootstrapper -o  jsonpath='{.items[].metadata.name}')
